name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '18 6 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: "Publish Templates"
        uses: devcontainers/action@v1
        with:
          publish-templates: "true"
          base-path-to-templates: "./src"
          generate-docs: "true"

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create PR for Documentation
      #   id: push_image_info
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     set -e
      #     echo "Start."

      #     # Configure git and Push updates
      #     git config --global user.email github-actions[bot]@users.noreply.github.com
      #     git config --global user.name github-actions[bot]
      #     git config pull.rebase false

      #     branch=automated-documentation-update-$GITHUB_RUN_ID
      #     git checkout -b $branch
      #     message='Automated documentation update'

      #     # Add / update and commit
      #     git add */**/README.md
      #     git commit -m 'Automated documentation update [skip ci]' || export NO_UPDATES=true

      #     # Push
      #     if [ "$NO_UPDATES" != "true" ] ; then
      #         git push origin "$branch"
      #         gh pr create --title "$message" --body "$message"
      #     fi
